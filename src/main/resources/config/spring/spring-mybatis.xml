<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">
    
    <bean
		class="com.webmagic.web.util.config.PropertyPlaceholderConfigurerSupportMultiEnvironment">
		<property name="locations">
			<list>
				<value>classpath:config/resource/config.properties</value>
			</list>
		</property>

		<property name="placeholderConfigLocations">
			<list>
				<value>classpath:config/resource/webmagic_@{envName}.properties</value>
			</list>
		</property>
		<property name="placeholderPrefix" value="@{" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
	</bean>

    <!--用户中心数据库-->
    <bean id="dataSourceA" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >
    <property name="driverClassName">
      <value>@{db.master.jdbc.driverClassName}</value>
    </property>
    <property name="url">
      <value>@{db.master.jdbc.url}</value>
    </property>
    <property name="username">
      <value>@{db.master.jdbc.username}</value>
    </property>
    <property name="password">
      <value>@{db.master.jdbc.password}</value>
    </property>
    <!-- 连接池最大使用连接数 -->
    <property name="maxActive">
      <value>500</value>
    </property>
    <!-- 初始化连接大小 -->
    <property name="initialSize">
      <value>10</value>
    </property>
    <!-- 获取连接最大等待时间 -->
    <property name="maxWait">
      <value>60000</value>
    </property>
    <!-- 连接池最小空闲 -->
    <property name="minIdle">
      <value>3</value>
    </property>
    <!-- 自动清除无用连接 -->
    <property name="removeAbandoned">
      <value>true</value>
    </property>
    <!-- 清除无用连接的等待时间 -->
    <property name="removeAbandonedTimeout">
      <value>180</value>
    </property>
    <!-- 连接属性 -->
    <property name="connectionProperties">
      <value>clientEncoding=UTF-8</value>
    </property>
  </bean>

    <bean id="dataSourceB" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="driverClassName">
            <value>@{db.master.jdbc.driverClassName}</value>
        </property>
        <property name="url">
            <value>@{db2.master.jdbc.url}</value>
        </property>
        <property name="username">
            <value>@{db2.master.jdbc.username}</value>
        </property>
        <property name="password">
            <value>@{db2.master.jdbc.password}</value>
        </property>
        <!-- 连接池最大使用连接数 -->
        <property name="maxActive">
            <value>500</value>
        </property>
        <!-- 初始化连接大小 -->
        <property name="initialSize">
            <value>10</value>
        </property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait">
            <value>60000</value>
        </property>

        <!-- 连接池最小空闲 -->
        <property name="minIdle">
            <value>3</value>
        </property>
        <!-- 自动清除无用连接 -->
        <property name="removeAbandoned">
            <value>true</value>
        </property>
        <!-- 清除无用连接的等待时间 -->
        <property name="removeAbandonedTimeout">
            <value>180</value>
        </property>
        <!-- 连接属性 -->
        <property name="connectionProperties">
            <value>clientEncoding=UTF-8</value>
        </property>
    </bean>


    <bean id="dataSource" class="com.webmagic.web.db.DynamicDataSource">
        <!-- 通过key-value的形式来关联数据源 -->
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="dataSourceA" key="dataSourceA"></entry>
                <entry value-ref="dataSourceB" key="dataSourceB"></entry>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSourceA">
        </property>
    </bean>


   <!-- mybatis文件配置，扫描所有mapper文件 -->
   <bean id="sqlSessionFactory"
       class="org.mybatis.spring.SqlSessionFactoryBean"
       p:dataSource-ref="dataSource"
       p:mapperLocations="classpath*:config/mybatis/**/mapper_*.xml" p:configLocation="classpath:config/mybatis/mybatis-config.xml"/><!-- configLocation为mybatis属性 mapperLocations为所有mapper-->

   <!-- spring与mybatis整合配置，扫描所有dao -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
        p:basePackage="com.webmagic.web.dao.impl"
        p:sqlSessionFactoryBeanName="sqlSessionFactory"/>
        
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
  
   <!-- 对数据源进行事务管理 -->
   <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        p:dataSource-ref="dataSource"/>
    <!-- 事务控制   -->
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>
